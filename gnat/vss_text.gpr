------------------------------------------------------------------------------
--                        M A G I C   R U N T I M E                         --
--                                                                          --
--                     Copyright (C) 2020-2022, AdaCore                     --
--                                                                          --
-- This library is free software;  you can redistribute it and/or modify it --
-- under terms of the  GNU General Public License  as published by the Free --
-- Software  Foundation;  either version 3,  or (at your  option) any later --
-- version. This library is distributed in the hope that it will be useful, --
-- but WITHOUT ANY WARRANTY;  without even the implied warranty of MERCHAN- --
-- TABILITY or FITNESS FOR A PARTICULAR PURPOSE.                            --
--                                                                          --
-- As a special exception under Section 7 of GPL version 3, you are granted --
-- additional permissions described in the GCC Runtime Library Exception,   --
-- version 3.1, as published by the Free Software Foundation.               --
--                                                                          --
-- You should have received a copy of the GNU General Public License and    --
-- a copy of the GCC Runtime Library Exception along with this program;     --
-- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --
-- <http://www.gnu.org/licenses/>.                                          --
--                                                                          --
------------------------------------------------------------------------------
--  VSS: Text processing subproject

with "vss_config";
with "vss_gnat";

project VSS_Text is

   for Languages use ("Ada");
   for Object_Dir use VSS_Config.Object_Dir;

   OS_Source_Dirs := ();

   case VSS_Config.OS_API is
      when "unix" | "osx" =>
         null;

      when "Windows_NT" =>
         OS_Source_Dirs := ("../source/os/windows");
   end case;

   for Source_Dirs use
     ("../source/os",
      "../source/os/implementation",
      "../source/streams",
      "../source/streams/implementation",
      "../source/text",
      "../source/text/implementation",
      "../source/text/ucd") & OS_Source_Dirs;

   package Compiler renames VSS_Config.Compiler;

   package Linker renames VSS_Config.Linker;

   package Naming is
      case VSS_Config.OS_API is
         when "unix" | "osx" =>
            for Implementation ("VSS.Environments.Platform")
              use "vss-environments-platform__posix.adb";
            for Implementation ("VSS.Implementation.Environment_Utilities")
              use "vss-implementation-environment_utilities__posix.adb";
            for Implementation ("VSS.Standard_Paths")
              use "vss-standard_paths__posix.adb";

         when "Windows_NT" =>
            for Implementation ("VSS.Environments.Platform")
              use "vss-environments-platform__windows.adb";
            for Implementation ("VSS.Implementation.Environment_Utilities")
              use "vss-implementation-environment_utilities__windows.adb";
            for Implementation ("VSS.Standard_Paths")
              use "vss-standard_paths__windows.adb";
      end case;
   end Naming;

end VSS_Text;
